# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

export EDITOR='gvim -f'
set -o vi

alias gvim='UBUNTU_MENUPROXY= gvim'
alias g='gvim'

alias we="curl http://wttr.in/thessaloniki"
alias ocl="octave-cli"

# restart audio drivers
alias audio_reboot="pulseaudio -k && sudo alsa force-reload"

alias pwdsize='du -hd0'

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ROS-specific :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
export CC=gcc
export CXX=g++

#export ROS_DOMAIN_ID=0
export ROS_LOCALHOST_ONLY=0

# ROS + my overlay
source /opt/ros/humble/setup.bash
source /home/afilot/ros2_ws/install/local_setup.bash
export ROS_DOMAIN_ID=128 #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

# DDS choice (https://github.com/sea-bass/turtlebot3_behavior_demos#local-setup)
export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
export CYCLONEDDS_URI=file://$HOME/cyclonedds.conf.xml

# The statement below:
#source /home/afilot/ros2_ws/install/setup.bash # ROS + my overlay
# is equivalent to these two:
#source /opt/ros/humble/setup.bash
#source /home/afilot/ros2_ws/install/local_setup.bash

# https://github.com/Martin-Oehler/ros2cd
source ~/.ros2cd.sh

# colcon command completion
source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash

# give color to rclcpp_{warn, error}
export RCUTILS_COLORIZED_OUTPUT=1

# if your ROS2 command does not auto-complete, put the following two lines into your .bashrc
eval "$(register-python-argcomplete3 ros2)"
eval "$(register-python-argcomplete3 colcon)"

# By default, ROS 2 logger doesn't output detailed information such as file name, function name, or line number. To customize it, write the following in your .bashrc:
# export RCUTILS_CONSOLE_OUTPUT_FORMAT="[{severity} {time}] [{name}]: {message} ({function_name}() at {file_name}:{line_number})"

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Build {1|all} workspace package{|s} from wherever
function colcon_build(){
  dir=$PWD;
  cd /home/afilot/ros2_ws/;

  if [ -z "$@" ]
  then
    colcon build
  else
    colcon build --packages-select "$@"
  fi

  source /opt/ros/humble/setup.bash
  source /home/afilot/ros2_ws/install/local_setup.bash
  cd $dir;
}

# Clean colcon {1|all} workspace package{|s} from wherever
# https://github.com/colcon/colcon-clean
function colcon_clean(){
  dir=$PWD;
  cd /home/afilot/ros2_ws/;

  if [ -z "$@" ]
  then
    colcon clean workspace
  else
    colcon clean packages --packages-select "$@"
  fi

  cd $dir;
}

if [ -f ~/.bashrc_li9i ]; then
    . ~/.bashrc_li9i
fi
